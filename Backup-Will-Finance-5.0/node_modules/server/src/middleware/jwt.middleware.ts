import { Request, Response, NextFunction } from 'express';
import jwt from 'jsonwebtoken';
import { User } from '../types/user.types';

declare module 'express' {
  interface Request {
    user?: User;
  }
}

export function jwtMiddleware(req: Request, res: Response, next: NextFunction) {
  const authHeader = req.headers.authorization;
  if (!authHeader || !authHeader.startsWith('Bearer ')) {
    return res.status(401).json({ error: 'Token de acesso não fornecido' });
  }
  const token = authHeader.substring(7);
  try {
    const decoded = jwt.verify(token, process.env.JWT_SECRET!);
    if (
      typeof decoded === 'object' &&
      decoded !== null &&
      'id' in decoded &&
      'email' in decoded &&
      'name' in decoded
    ) {
      req.user = decoded as User;
      next();
    } else {
      return res.status(401).json({ error: 'Token inválido ou expirado' });
    }
  } catch {
    return res.status(401).json({ error: 'Token inválido ou expirado' });
  }
}
