// client/src/utils/chartTheme.ts
// Centralização de tema cyberpunk para Chart.js e D3.js

export const CYBER_COLORS = {
  primary: '#00FFFF',
  secondary: '#FF0080',
  accent: '#39FF14',
  warning: '#FFD700',
  danger: '#FF0040',
  success: '#00FF41',
  background: '#0A0A0F',
  card: '#1A1A2E',
  grid: 'rgba(0,255,255,0.15)',
  text: '#FFFFFF',
  muted: '#94A3B8',
};

export const chartCyberTheme = {
  // Chart.js
  chartJs: {
    plugins: {
      legend: {
        labels: {
          color: CYBER_COLORS.primary,
          font: {
            family: 'Inter, JetBrains Mono, monospace',
            size: 14,
            weight: 'bold',
          },
        },
      },
      tooltip: {
        backgroundColor: CYBER_COLORS.card,
        titleColor: CYBER_COLORS.primary,
        bodyColor: CYBER_COLORS.text,
        borderColor: CYBER_COLORS.secondary,
        borderWidth: 1,
        cornerRadius: 8,
        padding: 12,
      },
    },
    scales: {
      x: {
        grid: {
          color: CYBER_COLORS.grid,
        },
        ticks: {
          color: CYBER_COLORS.muted,
        },
      },
      y: {
        grid: {
          color: CYBER_COLORS.grid,
        },
        ticks: {
          color: CYBER_COLORS.muted,
        },
      },
    },
    backgroundColor: CYBER_COLORS.background,
    borderColor: CYBER_COLORS.primary,
    color: CYBER_COLORS.text,
    animation: {
      duration: 1200,
      easing: 'easeOutQuart',
    },
    responsive: true,
    maintainAspectRatio: false,
  },
  // D3.js
  d3: {
    axis: {
      stroke: CYBER_COLORS.primary,
      label: CYBER_COLORS.text,
      fontFamily: 'Inter, JetBrains Mono, monospace',
      fontSize: 14,
    },
    grid: {
      stroke: CYBER_COLORS.grid,
    },
    tooltip: {
      background: CYBER_COLORS.card,
      color: CYBER_COLORS.text,
      border: `1px solid ${CYBER_COLORS.secondary}`,
      borderRadius: '8px',
      fontFamily: 'Inter, JetBrains Mono, monospace',
      fontSize: '13px',
      padding: '10px',
    },
    animation: {
      duration: 1200,
      ease: d3EaseOutQuart,
    },
  },
};

// Função de easing para D3
export function d3EaseOutQuart(t: number) {
  return 1 - Math.pow(1 - t, 4);
}

// Utilitário para aplicar tema em Chart.js
export function applyChartJsTheme(options: any = {}) {
  return {
    ...chartCyberTheme.chartJs,
    ...options,
  };
}

// Utilitário para aplicar tema em D3.js
export function applyD3Theme(options: any = {}) {
  return {
    ...chartCyberTheme.d3,
    ...options,
  };
}
