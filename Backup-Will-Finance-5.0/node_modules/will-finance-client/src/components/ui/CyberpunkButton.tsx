import React from 'react';

interface CyberpunkButtonProps {
  children: React.ReactNode;
  onClick?: () => void;
  variant?: 'primary' | 'secondary' | 'danger';
  loading?: boolean;
  disabled?: boolean;
  className?: string;
}

const CyberpunkButton = ({
  children,
  onClick,
  variant = 'primary',
  loading = false,
  disabled = false,
  className = '',
}: CyberpunkButtonProps) => {
  const variantClasses = {
    primary: 'bg-gradient-to-br from-[#0A0A2F] via-[#1A1A4E] to-[#16213E] border-cyber-primary text-cyber-primary hover:bg-cyber-primary/20 hover:text-cyber-accent',
    secondary: 'bg-gradient-to-br from-[#1A1A4E] via-[#0A0A2F] to-[#16213E] border-cyber-secondary text-cyber-secondary hover:bg-cyber-secondary/20 hover:text-cyber-accent',
    danger: 'bg-gradient-to-br from-[#16213E] via-[#1A1A4E] to-[#0A0A2F] border-cyber-danger text-cyber-danger hover:bg-cyber-danger/20 hover:text-cyber-accent',
  };

  const baseClasses = `
    relative px-6 py-3 font-mono font-medium uppercase tracking-wider
    border-2 rounded-xl transition-all duration-300
    hover:shadow-[0_0_32px_4px_rgba(0,255,255,0.35)] hover:scale-105 
    disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:scale-100
    backdrop-blur-lg animate-float
    active:scale-95
  `;

  if (loading) {
    return (
      <div className={`${baseClasses} ${variantClasses[variant]} ${className}`}>
        <div className="flex items-center justify-center">
          <div className="w-4 h-4 border-2 border-current border-t-transparent rounded-full animate-spin mr-2"></div>
          Processing...
        </div>
      </div>
    );
  }

  return (
    <button
      onClick={onClick}
      disabled={disabled}
      className={`${baseClasses} ${variantClasses[variant]} ${className}`}
    >
      <span className="relative z-10">{children}</span>
    </button>
  );
};

export { CyberpunkButton };
export default CyberpunkButton;
