import React, { useState, useEffect } from 'react';
import { CyberpunkCard } from '../../components/ui/CyberpunkCard';
import { apiClient } from '../../lib/api';
import { useAuthStore } from '../../stores/authStore';

// Dashboard premium, pronto para dados reais
export default function CyberDashboard() {
  const { user } = useAuthStore();
  const [stats, setStats] = useState<{ income: number; expenses: number; balance: number; transactionCount: number } | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    async function fetchStats() {
      setLoading(true);
      setError(null);
      try {
        if (!user?.id) throw new Error('Usuário não autenticado');
        const data = await apiClient.get(`/dashboard/stats`);
        setStats(data);
      } catch (err: any) {
        setError(err?.message || 'Erro ao buscar dados do dashboard');
      } finally {
        setLoading(false);
      }
    }
    fetchStats();
  }, [user?.id]);

  if (loading) {
    return (
      <div className="flex flex-col items-center justify-center min-h-[300px]">
        <span className="text-cyber-primary text-xl font-bold mb-2">Carregando dados financeiros...</span>
      </div>
    );
  }

  if (error || !stats) {
    return (
      <div className="flex flex-col items-center justify-center min-h-[300px]">
        <span className="text-red-400 text-xl font-bold mb-2">{error || 'Nenhum dado disponível'}</span>
        <span className="text-white-muted">Conecte sua conta ou aguarde integração dos dados financeiros.</span>
      </div>
    );
  }

  return (
    <div className="flex flex-col gap-8 w-full">
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mt-8">
        <CyberpunkCard>
          <div className="flex flex-col gap-2 items-center justify-center py-12">
            <span className="text-cyber-primary text-xl font-bold mb-2">Receita</span>
            <span className="text-white-muted">R$ {stats.income.toLocaleString('pt-BR', { minimumFractionDigits: 2 })}</span>
          </div>
        </CyberpunkCard>
        <CyberpunkCard>
          <div className="flex flex-col gap-2 items-center justify-center py-12">
            <span className="text-cyber-primary text-xl font-bold mb-2">Despesas</span>
            <span className="text-white-muted">R$ {stats.expenses.toLocaleString('pt-BR', { minimumFractionDigits: 2 })}</span>
          </div>
        </CyberpunkCard>
        <CyberpunkCard>
          <div className="flex flex-col gap-2 items-center justify-center py-12">
            <span className="text-cyber-primary text-xl font-bold mb-2">Saldo</span>
            <span className="text-white-muted">R$ {stats.balance.toLocaleString('pt-BR', { minimumFractionDigits: 2 })}</span>
          </div>
        </CyberpunkCard>
        <CyberpunkCard>
          <div className="flex flex-col gap-2 items-center justify-center py-12">
            <span className="text-cyber-primary text-xl font-bold mb-2">Transações</span>
            <span className="text-white-muted">{stats.transactionCount}</span>
          </div>
        </CyberpunkCard>
      </div>
    </div>
  );
}
