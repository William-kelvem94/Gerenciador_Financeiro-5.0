name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'

jobs:
  lint-and-test:
    name: Lint, Test & Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        workspace: [server, client]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install workspace dependencies
      run: npm ci --workspace=${{ matrix.workspace }}
      
    - name: Lint code (${{ matrix.workspace }})
      run: npm run lint --workspace=${{ matrix.workspace }}
      continue-on-error: true
      
    - name: Type check (${{ matrix.workspace }})
      run: |
        if [ "${{ matrix.workspace }}" = "server" ]; then
          npm run type-check --workspace=${{ matrix.workspace }}
        else
          npm run build --workspace=${{ matrix.workspace }}
        fi
        
    - name: Run tests (${{ matrix.workspace }})
      run: |
        if [ "${{ matrix.workspace }}" = "server" ]; then
          # Skip tests for now due to Prisma setup requirements
          echo "Server tests skipped - requires database setup"
        else
          echo "Client tests not yet implemented"
        fi
      continue-on-error: true

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm run install:all
      
    - name: Build application
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          client/dist
          server/dist
        retention-days: 7

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm run install:all
      
    - name: Run security audit
      run: npm audit --audit-level=high
      continue-on-error: true
      
    - name: Check for outdated dependencies
      run: npm outdated
      continue-on-error: true