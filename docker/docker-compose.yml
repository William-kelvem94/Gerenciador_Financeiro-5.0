version: '3.8'

services:
  # =====================================================
  # üóÑÔ∏è PostgreSQL Database
  # =====================================================
  db:
    image: postgres:15-alpine
    container_name: will_finance_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: will_finance
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: will_finance_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d will_finance"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - will_finance_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =====================================================
  # üöÄ Backend API (NestJS)
  # =====================================================
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: development
    container_name: will_finance_api
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:will_finance_2024@db:5432/will_finance
      - JWT_SECRET=super_secure_jwt_secret_key_will_finance_2024
      - PORT=8080
      - IA_SERVICE_URL=http://ia:8001
    ports:
      - "8080:8080"
    volumes:
      - ./server:/app
      - /app/node_modules
      - ./data:/app/data
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - will_finance_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =====================================================
  # üé® Frontend (React + Vite)
  # =====================================================
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: will_finance_client
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:8080
      - VITE_APP_ENV=development
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - will_finance_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =====================================================
  # ü§ñ IA Service (Python + FastAPI)
  # =====================================================
  ia:
    build:
      context: ./IA
      dockerfile: Dockerfile
    container_name: will_finance_ia
    restart: unless-stopped
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=info
    ports:
      - "8001:8001"
    volumes:
      - ./IA:/app
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
    networks:
      - will_finance_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =====================================================
  # üìä Nginx Proxy (Production-like)
  # =====================================================
  nginx:
    image: nginx:alpine
    container_name: will_finance_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - client
      - api
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - will_finance_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =====================================================
  # üìà Redis Cache (Optional)
  # =====================================================
  redis:
    image: redis:7-alpine
    container_name: will_finance_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis_password_2024
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - will_finance_network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

# =====================================================
# üì¶ Volumes
# =====================================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

# =====================================================
# üåê Networks
# =====================================================
networks:
  will_finance_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
