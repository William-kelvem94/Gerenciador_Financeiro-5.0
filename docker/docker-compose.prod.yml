version: '3.8'

services:
  # =====================================================
  # üóÑÔ∏è PostgreSQL Database (Production)
  # =====================================================
  db:
    image: postgres:15-alpine
    container_name: will_finance_db_prod
    restart: always
    environment:
      POSTGRES_DB: will_finance_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=en_US.UTF-8"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./database/backup:/backup
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d will_finance_prod"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - will_finance_network_prod
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # =====================================================
  # üöÄ Backend API (Production)
  # =====================================================
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: production
    container_name: will_finance_api_prod
    restart: always
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=8080
      - IA_SERVICE_URL=http://ia:8001
    expose:
      - "8080"
    volumes:
      - ./data:/app/data:ro
      - api_logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - will_finance_network_prod
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.75'
        reservations:
          memory: 512M
          cpus: '0.5'

  # =====================================================
  # üé® Frontend (Production Build)
  # =====================================================
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: production
    container_name: will_finance_client_prod
    restart: always
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - VITE_APP_ENV=production
    expose:
      - "80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - will_finance_network_prod
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

  # =====================================================
  # ü§ñ IA Service (Production)
  # =====================================================
  ia:
    build:
      context: ./IA
      dockerfile: Dockerfile
      target: production
    container_name: will_finance_ia_prod
    restart: always
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=warning
      - WORKERS=2
    expose:
      - "8001"
    volumes:
      - ./data:/app/data:ro
      - ia_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
    networks:
      - will_finance_network_prod
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # =====================================================
  # üåê Nginx Load Balancer (Production)
  # =====================================================
  nginx:
    image: nginx:alpine
    container_name: will_finance_nginx_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - client
      - api
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - will_finance_network_prod
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'

  # =====================================================
  # üî¥ Redis Cache (Production)
  # =====================================================
  redis:
    image: redis:7-alpine
    container_name: will_finance_redis_prod
    restart: always
    command: >
      redis-server 
      --appendonly yes 
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    volumes:
      - redis_data_prod:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - will_finance_network_prod
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

  # =====================================================
  # üìä Monitoring (Optional)
  # =====================================================
  monitoring:
    image: prom/prometheus:latest
    container_name: will_finance_monitoring
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - will_finance_network_prod
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "3"

# =====================================================
# üì¶ Volumes (Production)
# =====================================================
volumes:
  postgres_data_prod:
    driver: local
  redis_data_prod:
    driver: local
  nginx_logs:
    driver: local
  api_logs:
    driver: local
  ia_logs:
    driver: local
  prometheus_data:
    driver: local

# =====================================================
# üåê Networks (Production)
# =====================================================
networks:
  will_finance_network_prod:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16


  # =====================================================
  # üöÄ Backend API (Production)
  # =====================================================
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: production
    container_name: will_finance_api_prod
    restart: always
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=3000
      - IA_SERVICE_URL=http://ia:8000
    expose:
      - "3000"
    volumes:
      - ./data:/app/data:ro
      - api_logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - will_finance_network_prod
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.75'
        reservations:
          memory: 512M
          cpus: '0.5'

  # =====================================================
  # üé® Frontend (Production Build)
  # =====================================================
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: production
    container_name: will_finance_client_prod
    restart: always
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - VITE_APP_ENV=production
    expose:
      - "80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - will_finance_network_prod
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

  # =====================================================
  # ü§ñ IA Service (Production)
  # =====================================================
  ia:
    build:
      context: ./IA
      dockerfile: Dockerfile
      target: production
    container_name: will_finance_ia_prod
    restart: always
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=warning
      - WORKERS=2
    expose:
      - "8000"
    volumes:
      - ./data:/app/data:ro
      - ia_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
    networks:
      - will_finance_network_prod
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # =====================================================
  # üåê Nginx Load Balancer (Production)
  # =====================================================
  nginx:
    image: nginx:alpine
    container_name: will_finance_nginx_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - client
      - api
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - will_finance_network_prod
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'

  # =====================================================
  # üî¥ Redis Cache (Production)
  # =====================================================
  redis:
    image: redis:7-alpine
    container_name: will_finance_redis_prod
    restart: always
    command: >
      redis-server 
      --appendonly yes 
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    volumes:
      - redis_data_prod:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - will_finance_network_prod
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

  # =====================================================
  # üìä Monitoring (Optional)
  # =====================================================
  monitoring:
    image: prom/prometheus:latest
    container_name: will_finance_monitoring
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - will_finance_network_prod
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "3"

# =====================================================
# üì¶ Volumes (Production)
# =====================================================
volumes:
  postgres_data_prod:
    driver: local
  redis_data_prod:
    driver: local
  nginx_logs:
    driver: local
  api_logs:
    driver: local
  ia_logs:
    driver: local
  prometheus_data:
    driver: local

# =====================================================
# üåê Networks (Production)
# =====================================================
networks:
  will_finance_network_prod:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
