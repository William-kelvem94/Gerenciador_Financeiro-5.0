# =====================================
# Will Finance 5.0 - Environment Configuration
# Cyberpunk Financial Management System
# =====================================

# Application Environment
NODE_ENV=development
APP_NAME="Will Finance 5.0"
APP_VERSION=5.0.0

# Server Configuration
PORT=8080
HOST=localhost

# Database Configuration
DATABASE_URL="postgresql://will_finance:cyberpunk2077@localhost:5432/will_finance_db"
POSTGRES_USER=will_finance
POSTGRES_PASSWORD=cyberpunk2077
POSTGRES_DB=will_finance_db
POSTGRES_HOST=localhost
POSTGRES_PORT=5432

# Development Database (opcional)
DEV_DATABASE_URL="postgresql://will_finance:cyberpunk2077@localhost:5432/will_finance_dev"

# Redis Cache
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=cyberpunk2077
REDIS_HOST=localhost
REDIS_PORT=6379

# JWT Authentication
JWT_SECRET=your-super-secret-jwt-key-change-in-production-2024-cyberpunk
JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-in-production-2024
JWT_EXPIRES_IN=7d
JWT_REFRESH_EXPIRES_IN=30d

# Client URLs
CLIENT_URL=http://localhost:5173
SERVER_URL=http://localhost:8080

# CORS Configuration
CORS_ORIGIN=http://localhost:5173,http://localhost:3000,http://localhost:4000

# Firebase Configuration
FIREBASE_PROJECT_ID=your-firebase-project-id
FIREBASE_PRIVATE_KEY=your-firebase-private-key
FIREBASE_CLIENT_EMAIL=your-firebase-client-email
FIREBASE_API_KEY=your-firebase-api-key
FIREBASE_AUTH_DOMAIN=your-project.firebaseapp.com
FIREBASE_STORAGE_BUCKET=your-project.appspot.com
FIREBASE_MESSAGING_SENDER_ID=your-sender-id
FIREBASE_APP_ID=your-app-id

# Google OAuth
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# OpenAI Configuration
OPENAI_API_KEY=your-openai-api-key-here
OPENAI_MODEL=gpt-3.5-turbo
OPENAI_MAX_TOKENS=2000

# Email Configuration (SMTP)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# File Upload Configuration
MAX_FILE_SIZE=10485760  # 10MB
UPLOAD_PATH=./uploads
ALLOWED_FILE_TYPES=csv,pdf,json,xlsx

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000  # 15 minutes
RATE_LIMIT_MAX_REQUESTS=100

# Security
ENCRYPTION_KEY=your-32-character-encryption-key-here
BCRYPT_ROUNDS=12
SESSION_SECRET=your-session-secret-key-here

# Features Toggle
ENABLE_AI_FEATURES=true
ENABLE_WEBSOCKETS=true
ENABLE_ANALYTICS=true
ENABLE_NOTIFICATIONS=true
ENABLE_FILE_UPLOAD=true
ENABLE_EXPORT=true
ENABLE_IMPORT=true

# Logging
LOG_LEVEL=info
LOG_FILE=./logs/app.log
LOG_MAX_SIZE=10m
LOG_MAX_FILES=5

# Analytics & Monitoring
ANALYTICS_RETENTION_DAYS=90
ENABLE_PERFORMANCE_MONITORING=true
SENTRY_DSN=your-sentry-dsn-here

# AI Model Configuration
AI_MODEL_PATH=./IA/models
AI_TRAINING_DATA_PATH=./IA/datasets
AI_CONFIDENCE_THRESHOLD=0.8

# WebSocket Configuration
WS_PORT=8081
WS_ORIGINS=http://localhost:5173,http://localhost:3000

# Backup Configuration
BACKUP_INTERVAL=24h
BACKUP_RETENTION_DAYS=30
BACKUP_PATH=./database/backup

# Development Tools
ENABLE_SWAGGER=true
ENABLE_PRISMA_STUDIO=true
ENABLE_GRAPHQL_PLAYGROUND=false

# Production Overrides (descomente para produção)
# NODE_ENV=production
# DATABASE_URL=your-production-database-url
# CLIENT_URL=https://your-domain.com
# SERVER_URL=https://api.your-domain.com
# LOG_LEVEL=warn
# ENABLE_SWAGGER=false

# Docker Configuration
DOCKER_POSTGRES_VERSION=16-alpine
DOCKER_REDIS_VERSION=7-alpine
DOCKER_NODE_VERSION=18-alpine

# Timezone
TZ=America/Sao_Paulo

# Locale
LOCALE=pt-BR
CURRENCY=BRL

# API Versioning
API_VERSION=v1
API_PREFIX=/api/v1
