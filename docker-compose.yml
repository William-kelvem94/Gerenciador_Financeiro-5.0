version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: will-finance-db
    environment:
      POSTGRES_USER: will_finance
      POSTGRES_PASSWORD: cyberpunk2077
      POSTGRES_DB: will_finance_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - will-finance-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U will_finance -d will_finance_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: will-finance-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - will-finance-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: will-finance-api
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://will_finance:cyberpunk2077@postgres:5432/will_finance_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production-2024-cyberpunk
      CLIENT_URL: http://localhost:5173
      PORT: 8080
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
      FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - will-finance-network
    restart: unless-stopped
    volumes:
      - ./server/uploads:/app/uploads

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: will-finance-client
    environment:
      VITE_API_URL: http://localhost:3001
      VITE_WS_URL: ws://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - will-finance-network
    restart: unless-stopped

  # Nginx Load Balancer (optional)
  nginx:
    image: nginx:alpine
    container_name: will-finance-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - client
      - api
    networks:
      - will-finance-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  will-finance-network:
    driver: bridge
