version: '3.8'

# Configuração Docker para desenvolvimento local
# Baseado na estrutura otimizada da BETA 2

services:
  # PostgreSQL para desenvolvimento local
  db-local:
    image: postgres:16-alpine
    container_name: will-finance-db-local
    restart: unless-stopped
    environment:
      POSTGRES_DB: will_finance_dev
      POSTGRES_USER: will_finance
      POSTGRES_PASSWORD: cyberpunk2077
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init-dev.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - will-finance-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U will_finance -d will_finance_dev"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

  # Redis para cache local
  redis-local:
    image: redis:7-alpine
    container_name: will-finance-redis-local
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass cyberpunk2077
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - will-finance-dev
    healthcheck:
      test: ["CMD", "redis-cli", "--pass", "cyberpunk2077", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # PgAdmin para administração do banco (opcional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: will-finance-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@willfinance.dev
      PGADMIN_DEFAULT_PASSWORD: cyberpunk2077
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8081:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - will-finance-dev
    depends_on:
      db-local:
        condition: service_healthy
    profiles:
      - admin
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # Adminer (alternativa leve ao PgAdmin)
  adminer:
    image: adminer:latest
    container_name: will-finance-adminer
    restart: unless-stopped
    ports:
      - "8082:8080"
    networks:
      - will-finance-dev
    depends_on:
      db-local:
        condition: service_healthy
    profiles:
      - admin
    environment:
      ADMINER_DEFAULT_SERVER: db-local
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M

  # Mailhog para desenvolvimento de emails
  mailhog:
    image: mailhog/mailhog:latest
    container_name: will-finance-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - will-finance-dev
    profiles:
      - mail
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M

volumes:
  postgres_dev_data:
    driver: local
    name: will_finance_postgres_dev
  redis_dev_data:
    driver: local
    name: will_finance_redis_dev
  pgadmin_data:
    driver: local
    name: will_finance_pgadmin

networks:
  will-finance-dev:
    driver: bridge
    name: will-finance-dev-network
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
