{
  "name": "will-finance-5.0",
  "version": "5.0.0",
  "description": "ðŸš€ Sistema de gerenciamento financeiro cyberpunk completo e multiplataforma com React + TypeScript + Vite frontend, NestJS backend, PostgreSQL, IA integrada, dockerizado e pronto para Electron/React Native.",
  "main": "index.js",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "scripts": {
    "install:all": "npm install && cd client && npm install && cd ../server && npm install && cd ..",
    "install:fix": "npm install --force && cd client && npm install --force && cd ../server && npm install --force && cd ..",
    "dev": "concurrently \"npm run dev:api\" \"npm run dev:client\"",
    "dev:client": "cd client && npm run dev",
    "dev:api": "cd server && npm run dev",
    "dev:unified": "npm run dev",
    "dev:safe": "npm run db:quick-setup && npm run dev",
    "dev:local": "npm run dev",
    "dev:ai": "docker-compose up -d ia && npm run dev",
    "dev:db": "docker-compose -f docker-compose.dev.yml up -d",
    "dev:db:stop": "docker-compose -f docker-compose.dev.yml down",
    "dev:full": "npm run dev:db && npm run db:setup && npm run dev",
    "dev:silent": "concurrently --kill-others-on-fail \"npm run dev:api\" \"npm run dev:client\" > /dev/null 2>&1",
    "start": "npm run dev",
    "build": "cd client && npm run build && cd ../server && npm run build",
    "build:prod": "NODE_ENV=production npm run build && npm run optimize:images",
    "build:docker": "docker-compose build",
    "db:setup": "cd server && npx prisma generate && npx prisma migrate deploy && npx tsx src/prisma/seed.ts",
    "db:quick-setup": "cd server && npx prisma generate && npx prisma db push && npx tsx src/prisma/seed.ts",
    "db:studio": "cd server && npx prisma studio",
    "db:migrate": "cd server && npx prisma migrate dev",
    "db:reset": "cd server && npx prisma migrate reset --force && npx tsx src/prisma/seed.ts",
    "db:backup": "cd server && npm run db:backup",
    "stop": "docker-compose down",
    "start:prod": "NODE_ENV=production cd server && npm run start:prod",
    "lint": "cd client && npm run lint && cd ../server && npm run lint",
    "lint:fix": "cd client && npm run lint:fix && cd ../server && npm run lint:fix",
    "format": "cd client && npm run format && cd ../server && npm run format",
    "test": "cd server && npm run test && cd ../client && npm run test",
    "test:e2e": "cd server && npm run test:e2e",
    "test:coverage": "cd server && npm run test:cov",
    "test:all": "npm run test && cd client && npm run test && cd ..",
    "validate:all": "npm run lint && npm run test && npm run build",
    "validate:security": "powershell -ExecutionPolicy Bypass -File .\\scripts\\validate-security.ps1",
    "validate:complete": "powershell -ExecutionPolicy Bypass -File .\\scripts\\validate-complete.ps1",
    "fix:all": "npm run lint:fix && npm run format",
    "fix:security": "powershell -ExecutionPolicy Bypass -File .\\scripts\\fix-security-issues.ps1",
    "audit:all": "npm audit && cd client && npm audit && cd ../server && npm audit && cd ..",
    "security:audit:all": "npm audit && npm run audit --workspaces",
    "build:prod:secure": "npm run validate:security && npm run test:all && npm run build:prod",
    "check:all": "cd client && npm run check:all && cd ../server && npm run check:all",
    "check:outdated": "npm outdated && cd client && npm outdated && cd ../server && npm outdated",
    "deploy:check": "npm run validate:complete && npm run health:check",
    "health:check": "node scripts/health-monitor.js check",
    "health:monitor": "node scripts/health-monitor.js monitor",
    "health:help": "node scripts/health-monitor.js help",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:prod": "docker-compose -f docker-compose.prod.yml up -d"
  },
  "keywords": [
    "finance",
    "cyberpunk",
    "react",
    "typescript",
    "nodejs",
    "prisma",
    "sqlite",
    "pwa",
    "real-time"
  ],
  "author": "William",
  "license": "MIT",
  "devDependencies": {
    "@types/dotenv": "^6.1.1",
    "@types/express-rate-limit": "^5.1.3",
    "@types/firebase": "^2.4.32",
    "@types/node": "^24.2.0",
    "@types/socket.io": "^3.0.1",
    "@types/yup": "^0.29.14",
    "concurrently": "^8.2.2",
    "typescript": "^5.9.2"
  },
  "dependencies": {
    "@prisma/client": "^6.13.0",
    "@react-pdf/renderer": "^4.3.0",
    "@tailwindcss/postcss": "^4.1.11",
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^16.3.0",
    "@types/react": "^19.1.9",
    "@types/react-dom": "^19.1.7",
    "@types/react-router-dom": "^5.3.3",
    "@types/react-toastify": "^4.0.2",
    "@types/testing-library__jest-dom": "^5.14.9",
    "@vitejs/plugin-react": "^5.0.0",
    "autoprefixer": "^10.4.21",
    "axios": "^1.11.0",
    "chart.js": "^4.5.0",
    "compression": "^1.8.1",
    "dotenv": "^17.2.1",
    "firebase": "^12.1.0",
    "firebase-admin": "^13.4.0",
    "framer-motion": "^12.23.12",
    "helmet": "^8.1.0",
    "html2canvas": "^1.4.1",
    "jspdf": "^3.0.1",
    "lucide-react": "^0.539.0",
    "postcss": "^8.5.6",
    "react": "^19.1.1",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "^19.1.1",
    "react-dropzone": "^14.3.8",
    "react-hot-toast": "^2.5.2",
    "react-router-dom": "^7.8.0",
    "react-toastify": "^11.0.5",
    "redis": "^5.8.0",
    "socket.io": "^4.8.1",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^4.1.11",
    "uuid": "^11.1.0",
    "vitest": "^3.2.4",
    "zod": "^4.0.15",
    "zustand": "^5.0.7"
  }
}
